---

- name: stop opencast
  service:
    name: opencast
    state: stopped
  ignore_errors: true

- name: remove previous deployment
  file:
    path: /opt/opencast-dist-allinone
    state: absent

- name: extract distribution
  unarchive:
    src: 'https://github.com/opencast/opencast/releases/download/15.6/opencast-dist-allinone-15.6.tar.gz'
    dest: /opt
    remote_src: true
    owner: root
    group: root

- name: link installation from /opt/opencast
  file:
    src: /opt/opencast-dist-allinone
    dest: /opt/opencast
    owner: root
    group: root
    state: link

# by making the directory writable, we allow Karaf to generate a jetty.xml dynamically
- name: fix for missing configuration
  file:
    path: /opt/opencast/etc
    owner: opencast
    group: opencast
    recurse: true

- name: create karaf instances directory
  file:
    path: /opt/opencast-dist-allinone/instances
    state: directory
    mode: '0755'
    owner: opencast
    group: opencast

- name: link to systemd unit
  file:
    src: /opt/opencast/docs/scripts/service/opencast.service
    dest: /etc/systemd/system/opencast.service
    owner: root
    group: root
    state: link

- name: set ownership of storage directories
  file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
    owner: opencast
    group: opencast
  loop:
    - '{{ opencast_data_path }}'
    - '{{ opencast_fast_data_path }}'

- name: install dependencies
  package:
    name:
      - ffmpeg
      - tesseract
      - tesseract-langpack-deu
      - hunspell
      - nmap-ncat
      - python39
      - python3-pip
      - python3-virtualenv
    state: present

- name: Install virtualenv via pip
  pip:
    name: virtualenv

- name: install vosk-cli via pip
  pip:
    name: vosk-cli
    virtualenv: /opt/vosk/venv

- name: Create directory for models
  file:
    path: /usr/share/vosk/models
    state: directory

- name: Download and extract vosk model
  unarchive:
    src: 'https://alphacephei.com/vosk/models/vosk-model-small-en-us-0.15.zip'
    dest: /usr/share/vosk/models
    remote_src: yes

- name: configure opencast
  template:
    src: '{{ item }}'
    dest: /opt/opencast/{{ item }}
    owner: root
    group: root
    mode: '0644'
  loop:
    - etc/custom.properties
    - etc/org.opencastproject.adminui.endpoint.SeriesEndpoint.cfg
    - etc/org.opencastproject.fsresources.StaticResourceServlet.cfg
    - etc/org.opencastproject.liveschedule.impl.LiveScheduleServiceImpl.cfg
    - etc/org.opencastproject.speechtotext.impl.engine.VoskEngine.cfg
    - etc/org.opencastproject.speechtotext.impl.SpeechToTextServiceImpl.cfg
    - etc/security/mh_default_org.xml
    - etc/encoding/opencast.properties
    - etc/workflows/fast.yaml
    - etc/workflows/schedule-and-upload.xml
    - bin/setenv

- name: User Interface Configuration
  copy:
    dest: /opt/opencast/etc/ui-config/mh_default_org/{{ item }}
    src: '{{ item }}'
  loop:
    - studio/settings.toml
    - editor/editor-settings.toml

- name: start and enable opencast service
  systemd:
    name: opencast.service
    state: restarted
    enabled: true
    daemon_reload: true
