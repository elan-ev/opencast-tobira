server {
  # Enforce HTTPS by redirecting requests
  listen 80;
  listen [::]:80;
  server_name {{ inventory_hostname }};

  # Serve certbot ACME requests
  location /.well-known/ {
    root /var/lib/nginx/;
  }

  # Enforce encrypted connections for everything else
  location / {
    return 301 https://{{ inventory_hostname }}$request_uri;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name {{ inventory_hostname }};

  ssl_certificate_key /etc/nginx/ssl/{{ inventory_hostname }}.key;
  ssl_certificate     /etc/nginx/ssl/{{ inventory_hostname }}.crt;

  # Additional TLS related Nginx options
  include /etc/nginx/conf.d/tls.conf;

  # Accept large ingests
  client_max_body_size 0;

  location /protected {
    internal;
    alias {{ opencast_storage_downloads_path }};
  }

  # Proxy configuration for Opencast
  location / {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-SSL "on";

    proxy_pass http://127.0.0.1:8080;

    # Make sure to redirect location headers to HTTPS
    proxy_redirect http://$host https://$host;

    # Ensure Cookies are marked as Secure and HTTPOnly
    proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=none";

    # Do not buffer responses
    proxy_buffering off;

    # Do not buffer requests
    proxy_request_buffering off;
  }
}
